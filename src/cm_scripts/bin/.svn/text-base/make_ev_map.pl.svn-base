#!/usr/bin/perl

use strict;
use warnings;
use Getopt::Long;
use File::Basename;
use Sys::Hostname;

use FindBin;
use lib "$FindBin::Bin/../perl_lib";
use Rosetta::Job qw/ run_jobs_in_parallel /;
use Rosetta::Util qw/ options_to_str mkdir_safe copy_safe /;
use hhsearch::Util qw/ make_hhm /;

my %options;
$options{script_base}  = dirname($0);
$options{n_procs} = 4;
$options{hhsearch_path} = '/work/tex/hhsearch';
$options{cal_db}        = '/work/tex/hhsearch/cal.hhm';
$options{use_hhblits} = 0;
$options{n_procs} = 8;
&GetOptions(
	\%options,
	"pdb_dir=s",
	"fasta=s",
	"n_procs=i",
	"hhsearch_path=s",
	"cal_db=s",
);
my $host = hostname;
my $fasta_dir = "$options{pdb_dir}/fasta_dir";
mkdir_safe("$fasta_dir");
copy_safe("$options{fasta}", "$fasta_dir");

my $hhblits_option = "";
if ( $host =~ /nrb/ ) {
	$options{hhsearch_path} = '/work/robetta/src/rosetta_server/bin/hhsearch/hhsearch1.6.0';
	$options{cal_db}        = '/work/robetta/src/rosetta_server/bin/hhsearch/hhsearch1.5.1/cal.hhm';
	$options{use_hhblits}   = 1;
}
#convert pdb to fasta--------------------------------
my @make_fasta_jobs;
foreach my $t_pdb ( glob( "$options{pdb_dir}/*.pdb"  ) ) {
	my $id = basename( $t_pdb, '.pdb' );
	my $pdbid = substr( $id, 0, 4 );
	my $chain = substr( $id, 4, 1 );
	my $job = Rosetta::Job->new(
		executable => "$options{script_base}/getFastaFromCoords.pl",
		args => ["-pdbfile $pdbid$chain.pdb ",
				 "-chain $chain ",
				 "> $fasta_dir/$pdbid$chain.fasta",
			   ],
		results_file => "$fasta_dir/$pdbid$chain.fasta",
		dir  => "$options{pdb_dir}",
		lockfile     => "$fasta_dir/$pdbid$chain.fasta.lock",
	  );
	push @make_fasta_jobs, $job;
}
Rosetta::Job::run_jobs_in_parallel(\@make_fasta_jobs,4);
#make hhm for each fasta-------------------------------
#if on nrb use hhblits
chdir("$fasta_dir");
foreach my $current_fasta ( glob( "*.fasta"  ) ) {
	print "making hhm for $current_fasta\n";
	make_hhm( $current_fasta, '.', \%options );
}
#calibrate the original fasta-------------------------------
my $fasta_basename = basename("$options{fasta}",'.fasta');
my $cal_job = Rosetta::Job->new(
	executable => "$options{hhsearch_path}/hhsearch",
	args => ["-cal",
			 "-i ", "$fasta_basename.hhm",
			 "-d ", "$options{cal_db}",
			 "-cpu 4",
			 "> $fasta_basename.completed_cal_hhm",
		   ],
	results_file => "$fasta_basename.completed_cal_hhm",
	dir  => ".",
	lockfile     => "$fasta_basename.lock",
  );
$cal_job->run_with_message("calibrating hhm\n");
#make hhr files-----------------------------------------
my $target_hhm = "$fasta_basename.hhm";
foreach my $template_hhm ( glob( "*.hhm"  ) ) {
	my $template_hhm_base = basename ($template_hhm,'.hhm');
	if("$template_hhm_base.hhm" ne $target_hhm){
		my $job = Rosetta::Job->new(
			executable => "$options{hhsearch_path}/hhalign",
			args => ["-t ", "$template_hhm_base.hhm",
					 "-i ", $target_hhm,
					 "-o ", "$template_hhm_base.hhr",
				   ],
			results_file => "$template_hhm_base.hhr",
			dir  => ".",
			lockfile     => "$template_hhm_base.hhr.lock",
		  );
		$job->run_with_message("making hhr for $template_hhm_base");
	}
}
#get e_value from each file and dump to file-----------------------------------------
open OUT_FILE, ">ev_map.txt" or die $!;
print OUT_FILE "template e_value\n";
foreach my $template_hhr ( glob( "*.hhr"  ) ) {
	my $template_hhr_base = basename ($template_hhr,'.hhr');
	if("$template_hhr_base.hhr" ne "$fasta_basename.hhr"){
		open FILE, "<$template_hhr_base.hhr" or die $!;
		my $line = <FILE>;
		for(my $ii=1; $ii <= 9; $ii++){
			$line = <FILE>;
			chomp $line;
		}
		my @position = split(/\s+/,$line);
		my $pdb = substr($position[2],0,5);
		my $e_val = $position[5]+0;
		if ($e_val == 0){
			$e_val = 1e-45;
		}
		print OUT_FILE ("$pdb $e_val\n");
	}
}
close OUT_FILE or die $!;
copy_safe("$fasta_dir/ev_map.txt","$options{pdb_dir}");
