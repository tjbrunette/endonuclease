#!/usr/bin/perl

use strict;
use warnings;

use lib '/work/tex/src/cm_scripts/perl_lib';

use List::Util qw/ shuffle /;
use Getopt::Long;
use Rosetta::Util;

my %options;
$options{cstfile} = 0;
$options{outfile} = 0;

&GetOptions(
	\%options,
	'cstfile=s',
	'outfile=s',
);

if ( !file_exists($options{cstfile}) ) {
	die "Error: must provide -cstfile!\n";
}

if ( !$options{outfile} ) {
	$options{outfile} = "$options{cstfile}.permuted";
}

open FILE, "<$options{cstfile}" or die $!;
my @resi;
my @resj;
my @cst_def;
while ( my $line = <FILE> ) {
	chomp $line;
	if ( $line =~ /^AtomPair\s+([\d\w]+)\s+(\d+)\s+([\d\w]+)\s+(\d+)\s+(.*)$/ ) {
		push @resi, ( join ' ', ( $1, $2 ) );
		push @resj, ( join ' ', ( $3, $4 ) );
		push @cst_def, $5;
	}
}
close FILE or die $!;

@resi    = shuffle @resi;
@resj    = shuffle @resj;
@cst_def = shuffle @cst_def;

open OUT, ">$options{outfile}" or die $!;
print OUT "# permuted version of $options{cstfile}\n";
while ( @resi && @resj && @cst_def ) {
	my $i = shift @resi;
	my $j = shift @resj;
	my $d = shift @cst_def;
	print OUT join ' ', ( 'AtomPair', $i, $j, $d );
	print OUT "\n";
}
close OUT or die $1;
