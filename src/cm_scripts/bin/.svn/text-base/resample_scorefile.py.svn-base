#! /usr/bin/env python
#
# Selects a subset of the entries of a score file using reservoir sampling
# in O(n) time and O(k) memory.

import random, re
from argparse import ArgumentParser

if __name__ == '__main__':
    parser = ArgumentParser()
    parser.add_argument('--in', required = True, help = 'Input score file')
    parser.add_argument('--out', required = True, help = 'Output score file')
    parser.add_argument('--num', required = True, help = 'Number of entries to return')
    options = vars(parser.parse_args())

    with open(options['in']) as fin:
        with open(options['out'], 'w') as fout:
            # Identify header line in input
            regex = re.compile('SCORE')

            for line in fin:
                if regex.match(line):
                    break

            header = line
            fout.write(header)

            reservoir = []
            capacity = int(options['num'])

            for i, line in enumerate(fin):
                if i < capacity:
                    # Generate the reservoir
                    reservoir.append(line)
                else:
                    # Randomly replace elements in the reservoir with descreasing probability
                    r = random.randrange(i + 1)
                    if r < capacity:
                        reservoir[r] = line

            # Write selected lines to disk
            for r in reservoir:
                fout.write(r)
