#!/usr/bin/perl

use strict;
use warnings;

use Cwd qw/ abs_path /;
use FindBin;
use File::Path;
use File::Basename;
use Getopt::Long;
use lib "$FindBin::Bin/../perl_lib";
my $script_dir    = "$FindBin::Bin/../bin";
my $protocol_base = "$FindBin::Bin/../protocols";
# verify that necessary modules and external requirements are present
&include_required_modules;
&check_external_requirements;

my %options;
my $options_fn = assemble_path( $FindBin::Bin, '../rosetta_cm.conf' );

Rosetta::Util::load_options_from_file(
	$options_fn, \%options,
);

&GetOptions(
	\%options,
	"aln_file=s",
	"template_dir=s",
	"max_templates=i",
	"prefix=s",
	"max_template_pct_id=f", # maximum percentage identity between templates
);
$options{logger}         = \&logger;

my $setup_job = Rosetta::Template::setup_templates(
	$options{template_dir},
	$options{aln_file},
	\%options,
	0
);
if ( !$options{prefix} ) {
	$options{prefix} = ".";
}

if ( $setup_job ) {
	$setup_job->run_with_message( "setting up templates" );
}


sub include_required_modules {
	# perl5 modules. All of these should be installed in a standard Perl
	# installation or in cm_scripts/perl_lib.
	use Cwd;
	use File::Copy;
	use File::Path;
	use Getopt::Long;
	use File::Basename;
	use Text::Template;

	# custom modules
	use hhsearch;
	use alignment;

	use Rosetta::Job;
	use Rosetta::Util;
	use Rosetta::Native;
	use Rosetta::Protocol;
	use Rosetta::Template;
	use Rosetta::Sequence;
	use Rosetta::Fragments;
	use Rosetta::Constraints;
	use Rosetta::TargetFiles;
	use Rosetta::AlignmentClustering;
}

sub check_external_requirements {
	# perl > 5.8.5
	require 5.8.5;

	# python	 > 2.6
	my $output = `python -V 2>&1`;
	if ( $output =~ /Python\s+([\d\.]+)/ ) {
		my $python_version = $1;
		my @v = split /\./, $python_version;

		if ( $v[0] < 2 || $v[1] < 6 || $v[2] < 2 ) {
			die "Error: python must be version 2.6.2 or greater!\n";
		}
	} else {
		die "No version of python found! (output of python -V = $output)\n";
	}
}
my $init = 0;
sub logger {
	if ( !$init ) {
	    my $library_dir = abs_path($options{prefix});
	    open LOGFILE, ">>$library_dir/get_templates.log";
	}

	my $time = localtime();
	foreach my $msg (@_) {
		print join ' ', ( $time, $msg );
		print "\n";
		print LOGFILE join ' ', ( $time, $msg );
		print LOGFILE "\n";
	}
}
