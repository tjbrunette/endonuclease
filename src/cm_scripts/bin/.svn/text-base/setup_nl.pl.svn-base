#!/usr/bin/perl

use strict;
use warnings;

use lib '/work/tex/src/cm_scripts/perl_lib';
use Cwd qw/ abs_path /;
use Getopt::Long;
use File::Copy;
use File::Path;
use File::Basename;
use Rosetta::align_util qw/ read_alns /;
use Rosetta::Protocol;
use Rosetta::TargetFiles;

my $aln_format = 'grishin';
my @protocols  = qw/ nonlocal_cm /;
my @targets    = @ARGV;

foreach my $target (@targets) {
foreach my $protocol (@protocols) {
	my $target_id = basename($target);
	my $aln_fn    = "$target/alignment/alignment.filt";
	my @alns      = read_alns($aln_fn,$aln_format);

	# split alignments into individual files, set up individual runs
	my $working_dir = "$target/split";
	foreach my $aln (@alns) {
		my $aln_id = $aln->get_template_name;
		my $dir    = "$working_dir/$aln_id";
		mkpath $dir;
		open FILE, ">$dir/$aln_id.filt" or die $!;
		print FILE $aln->filt_string;
		close FILE or die $!;

		my $pdbid = lc substr( $aln_id, 0, 4 );
		my $chain = uc substr( $aln_id, 4, 1 );
		if ( ! -f "$dir/$pdbid$chain.pdb" ) {
			system( "cd $dir; get_pdb.py $pdbid $chain" );
		}

		my $fns = Rosetta::TargetFiles->new(
			$target_id, $target,
			'/work/tex/src/cm_scripts/protocols/protocol_files.conf'
		);

		my $cst_file = "$target/constraints/$target.dist_csts";
		$fns->value( 'alignment_fn',  abs_path( "$dir/$aln_id.filt") );
		$fns->value( 'fasta_fn',      abs_path( "$target/$target.fasta" ) );
		$fns->value( 'frag3_fn',      abs_path( "$target/fragments/boinc_aa$target" . "03_05.200_v1_3.gz" ) );
		$fns->value( 'frag9_fn',      abs_path( "$target/fragments/boinc_aa$target" . "09_05.200_v1_3.gz" ) );
		$fns->value( 'native',        abs_path( "$target/native/native.pdb" ) );
		$fns->value( 'cst_file',      abs_path($cst_file) );
		$fns->value( 'cst_fa_file',   abs_path($cst_file) );
		$fns->value( 'template_pdbs', abs_path( "$dir/$pdbid$chain.pdb" ) );
		my $protocol = Rosetta::Protocol->new(
			"/work/tex/src/cm_scripts/protocols/$protocol.template"
		);

		my $boinc_tag  = "nonlocal_split_$aln_id";
		$protocol->boinc_tag($boinc_tag);
		$protocol->setup_boinc_job( $dir, $fns );
	}
}
}
