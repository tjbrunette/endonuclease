#! /usr/bin/env python
from TMalign import TMResult, tmalign_with_alignment
import argparse
import operator

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--reference', required = True, help = 'Reference structure')
    parser.add_argument('--partial_threads', required = True, nargs = '+', help = 'One or more partial threads')
    parser.add_argument('--executable', default = '/work/cmiles/bin/tmalign', help = 'TM-align executable')
    options = vars(parser.parse_args())

    results = []
    for pt in options['partial_threads']:
        result = tmalign_with_alignment(options['reference'], pt, options['executable'])
        results.append((options['reference'], pt, result.get_tmscore()))

    # Decreasing order by TM-score
    results.sort(key = operator.itemgetter(-1), reverse = True)
    for r in results:
        print '%s %s => %.3f' % r
