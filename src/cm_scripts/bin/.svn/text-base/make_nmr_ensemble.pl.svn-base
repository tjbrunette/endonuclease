#!/usr/bin/perl

use strict;
use warnings;

use Cwd qw/ abs_path getcwd /;
use File::Path;
use File::Basename;
use Getopt::Long;

my %options;
$options{N}        = 10;
$options{dir}      = 0;
$options{native}   = 0;
$options{silent}   = 0;
$options{cm_base}  = "/work/tex/src/cm_scripts";
$options{database} = "/work/tex/src/rosetta/rosetta_database";

&GetOptions(
	\%options,
	"N=i",
	"native=s",
	"silent=s",
	"cm_base=s",
	"dir=s",
);

if ( ! -f $options{silent} ) {
	die "Error: must provide -silent!\n";
}

if ( ! $options{dir} ) {
	die "Error: must provide -dir!\n";
}

if ( -d $options{dir} ) {
	die "Error: dir $options{dir} already exists!\n";
}

foreach my $path ( qw/ native silent cm_base / ) {
	$options{$path} = abs_path($options{$path});
}

my $orig_dir = getcwd;
mkpath $options{dir};
chdir($options{dir});

my $tag = basename($options{silent});
my $filtered_fn = "$tag.filtered.out";
if ( -f $filtered_fn ) {
	warn "Error: file $filtered_fn already exists!\n";
	unlink $filtered_fn;
}

system( "$options{cm_base}/bin/silent_extract_lowscore.pl -silent $options{silent} -outfile $filtered_fn -N $options{N}" );
system( "~tex/src/mini/bin/extract_pdbs.default.linuxgccrelease -in:file:silent $filtered_fn -in:file:residue_type_set fa_standard -in:file:silent_struct_type binary -database $options{database} -silent_read_through_errors" );

my @pdbs = glob( "S*.pdb" );
my %super_data;
foreach my $pdb (@pdbs) {
	system( "~tex/bin/superimpose.py $pdb S*.pdb > low$options{N}.pdb 2>$pdb.super.txt" );
	open FILE, "<$pdb.super.txt" or die $!;
	while ( my $line = <FILE> ) {
		chomp $line;
		if ( $line =~ /(\d+) residues/ ) {
			$super_data{$pdb} += $1;
		}
	}
	close FILE or die $!;
}

my @sorted = sort { $super_data{$b} <=> $super_data{$a} } keys %super_data;
my $pdb_str = join ' ', @sorted;
system( "~tex/bin/superimpose.py $pdb_str > low$options{N}.pdb 2>model_super_dat.txt" );

# superimpose to native (if it exists)
if ( $options{native} && -f $options{native} ) {
	system( "~tex/bin/superimpose.py $options{native} $pdb_str > super_nat.pdb 2>native_super_dat.txt" );
}

chdir( $orig_dir );
